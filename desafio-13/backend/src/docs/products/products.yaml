paths:
  /api/products:
    get:
      summary: "Consulta todos productos"
      tags:
        - Productos
      parameters:
      - name: page
        in: path
        required: false
        description: "Pagina donde se encuentra el producto"
        schema: 
          $type: integer
      - name: limit
        in: path
        required: false
        description: "Cantidad de productos por pagina"
        schema: 
          $type: integer
      - name: code
        in: path
        required: false
        description: "Codigo del producto buscado"
        schema: 
          $type: string
      - name: sort
        in: path
        required: false
        description: "Orden del listado de productos"
        schema: 
          $type: boolean
      responses:
        "200":
          description: "Productos encontrados"
          content:
            application/json:
              schema:                
                items:
                  $ref: "#components/schemas/ProductList"
        "500":
          description: "Error del servidor al obtener los productos"
    post:
      security:
        - cookieAuth: []  
      summary: "Crea un producto"
      tags:
        - Productos
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Título del producto
                description:
                  type: string
                  description: Descripción del producto
                price:
                  type: number
                  description: Precio del producto
                thumbnail:
                  type: array
                  items:
                    type: string
                    format: binary
                    description: Ruta de las miniaturas del producto
                code:
                  type: string
                  description: Código del producto
                stock:
                  type: integer
                  description: Cantidad de stock disponible
                status:
                  type: boolean
                  description: Estado del producto (true-disponible, false-no disponible)
                category:
                  type: string
                  description: Categoría del producto
              required:
                - title
                - description
                - price
                - thumbnail
                - code
                - stock
                - status
                - category      
      responses:
        "201":
          description: "Producto creado"
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "400":
          description: Error de solicitud
        "401":
          description: No autorizado
  /api/products/{uid}:
    get:
      summary: "Consultar un producto dado su id"
      tags:
        - Productos
      parameters:
      - name: uid
        in: path
        required: true
        description: "Id del producto solicitado"
        schema: 
          $type: String      
      responses:
        "200":
          description: "Producto encontrado"
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "400":
          description: Error de solicitud
        "404":
          description: Producto no encontrado
    put:
      security:
        - cookieAuth: []
      summary: Actualizar un producto
      tags:
        - Productos      
      description: Permite actualizar los atributos de un producto existente.
      parameters:
        - name: uid
          in: path
          description: ID del producto a actualizar
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Título del producto
                description:
                  type: string
                  description: Descripción del producto
                price:
                  type: number
                  description: Precio del producto
                thumbnail:
                  type: array
                  items:
                    type: string
                    format: binary
                    description: Ruta de las miniaturas del producto
                code:
                  type: string
                  description: Código del producto
                stock:
                  type: integer
                  description: Cantidad de stock disponible
                status:
                  type: boolean
                  description: Estado del producto (true-disponible, false-no disponible)
                category:
                  type: string
                  description: Categoría del producto              
      responses:
        '200':
          description: OK
        '400':
          description: Error de solicitud
        '404':
          description: Producto no encontrado
    delete:
      security:
        - cookieAuth: []
      summary: "Eliminar un producto dado su id"
      tags:
        - Productos      
      parameters:
      - name: uid
        in: path
        required: true
        description: "Id del producto solicitado"
        schema: 
          $type: String      
      responses:
        "200":
          description: "Producto ha sido eliminado"
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
    

    
components:
  schemas:
    ProductList:
      type: object
      properties:
        totalDocs:
          type: integer
          description: "Total de productos"
        limit:
          type: integer
          description: "Cantidad de productos por pagina"
        totalPages:
          type: integer
          description: "Paginas totales"
        page:
          type: integer
          description: "Pagina actual"
        pagingCounter:
          type: integer
          description: "Cantidad de paginas"
        hasPrevPage:
          type: boolean
          description: "Posee pagina previa"
        hasNextPage:
          type: boolean
          description: "Posee pagina posterior"
        prevPage:
          type: integer
          description: "Pagina previa"
        nextPage:
          type: integer
          description: "Pagina posterior"
        nextlink:
          type: string
          description: "Enlace a la pagina previa"
        prevlink:
          type: string
          description: "Enlace a la pagina previa"
        payload:
          type: array
          description: "Lista de productos"         
        status:
          type: string
          description: "status"
      example:
        totalDocs: 1
        limit: 10
        totalPages: 1
        page: 1
        pagingCounter: 1
        hasPrevPage: false
        hasNextPage: false
        prevPage: null
        nextPage: null
        nextlink: "example.com/next"
        prevlink: "example.com/prev"
        payload:
          - _id: "ObjectId(\"abc123\")"
            title: "Ejemplo de producto"
            description: "Descripción del producto"
            price: 99.99
            thumbnail:
              - "thumbnail1.jpg"
              - "thumbnail2.jpg"
            code: "abc123"
            stock: 5
            status: true
            category: "Ejemplo"
        status: "success"      
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: "Id autogenerado"
        title:
          type: string
          description: "Titulo del Producto"
        description:
          type: string
          description: "Descripcion del Producto"
        price:
          type: integer
          description: "Precio del Producto"
        thumbnail:
          type: array
          description: "Imagenes del Producto"
        code:
          type: string
          description: "Codigo del Producto"
        stock:
          type: integer
          description: "Cantidad disponible del Producto"
        status:
          type: boolean
          description: "Estado del Producto"
        category:
          type: string
          description: "Categoria del Producto"
      example:
        _id: ObjectId("12bb12bb12bb12bb12bb12bb")
        title: "Campera deportiva"
        description: "Gris, negra, azul"
        price: 4000
        thumbnail: [ "campera_frente.jpg" , "campera_dorso.jpg"]
        code: "ghj123"
        stock: 10
        status: true
        category: "Deportes"    
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito
        products:
          type: array
          description: Lista de productos en el carrito
          items:
            type: object
            properties:
              product:
                type: object
                description: Información del producto
                properties:
                  _id:
                    type: string
                    description: ID del producto
                  title:
                    type: string
                    description: Título del producto
                  description:
                    type: string
                    description: Descripción del producto
                  price:
                    type: number
                    description: Precio del producto
                  thumbnail:
                    type: array
                    description: Lista de imágenes del producto
                    items:
                      type: string
                      description: Nombre del archivo de imagen
                  code:
                    type: string
                    description: Código del producto
                  stock:
                    type: integer
                    description: Stock disponible del producto
                  status:
                    type: boolean
                    description: Estado del producto
                  category:
                    type: string
                    description: Categoría del producto
                  owner:
                    type: string
                    description: Propietario del producto
              quantity:
                type: integer
                description: Cantidad del producto en el carrito
              _id:
                type: string
                description: ID del elemento del carrito
        __v:
          type: integer
          description: Versión del carrito
  securitySchemas:    
    cookieAuth:
      type: apiKey
      in: cookie
      name: jwt
security:
  - bearerAuth: []